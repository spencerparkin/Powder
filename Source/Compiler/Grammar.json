{
  "initial_rule": "statement-list",
  "algorithm": "slow",
  "flags": {
    "flatten": true
  },
  "rules": {
    "statement-list": [
      [ "statement-list", ";", "statement-list" ],
      [ "statement" ],
      [ "statement", ";" ]
    ],
    "statement": [
      [ "if-statement" ],
      [ "while-statement" ],
      [ "do-while-statement" ],
      [ "for-each-statement" ],
      [ "for-loop-statement" ],
      [ "fork-statement" ],
      [ "return-statement" ],
      [ "yield-statement" ],
      [ "break-statement" ],
      [ "continue-statement" ],
      [ "expression" ]
    ],
    "if-statement": [
      [ "if", "(", "expression", ")", "embedded-statement" ],
      [ "if", "(", "expression", ")", "embedded-statement", "else", "embedded-statement" ]
    ],
    "while-statement": [
      [ "while", "(", "expression", ")", "embedded-statement" ]
    ],
    "do-while-statement": [
      [ "do", "embedded-statement", "while", "(", "expression", ")" ],
      [ "do", "embedded-statement", "while", "(", "expression", ")", "embedded-statement" ]
    ],
    "for-each-statement": [
      [ "for", "(", "for-iteration-expression", ")", "embedded-statement" ]
    ],
    "for-loop-statement": [
      [ "for", "(", "for-loop-logic", ")", "embedded-statement" ]
    ],
    "for-loop-logic": [
      [ "for-init-statement", ";", "for-conditional-expression", ";", "for-advance-statement" ]
    ],
    "for-init-statement": [
      [ "expression" ]
    ],
    "for-conditional-expression": [
      [ "expression" ]
    ],
    "for-advance-statement": [
      [ "expression" ]
    ],
    "for-iteration-expression": [
      [ "@identifier", "in", "expression" ]
    ],
    "fork-statement": [
      [ "fork", "embedded-statement" ],
      [ "fork", "embedded-statement", "else", "embedded-statement" ]
    ],
    "return-statement": [
      [ "return", "expression" ],
      [ "return" ]
    ],
    "yield-statement": [
      [ "yield" ]
    ],
    "break-statement": [
      [ "break" ]
    ],
    "continue-statement": [
      [ "continue" ]
    ],
    "function-definition": [
      [ "func", "(", ")", "block" ],
      [ "func", "(", "identifier-list", ")", "block" ],
      [ "func", "[", "capture-list", "]", "(", ")", "block" ],
      [ "func", "[", "capture-list", "]", "(", "identifier-list", ")", "block" ]
    ],
    "identifier-list": [
      [ "identifier-list", ",", "identifier-list" ],
      [ "@identifier" ]
    ],
    "embedded-statement": [
      [ "block" ],
      [ "statement" ]
    ],
    "block": [
      [ "empty-block" ],
      [ "{", "statement-list", "}" ]
    ],
    "empty-block": [
      [ "{", "}" ]
    ],
    "expression": [
      [ "literal" ],
      [ "@identifier" ],
      [ "wrapped-expression" ],
      [ "assignment-expression" ],
      [ "membership-expression" ],
      [ "container-size-expression" ],
      [ "list-push-pop-expression" ],
      [ "binary-expression" ],
      [ "unary-expression" ],
      [ "member-access-expression" ],
      [ "map-keys-expression" ],
      [ "function-call" ],
      [ "delete-field-expression" ],
      [ "container-field-expression" ],
      [ "function-definition" ],
      [ "pre-bump-expression" ],
      [ "post-bump-expression" ]
    ],
    "membership-expression": [
      [ "expression", "in", "expression" ]
    ],
    "member-access-expression": [
      [ "expression", ".", "@identifier", -1 ]
    ],
    "list-push-pop-expression": [
      [ "expression", "-->", "expression" ],
      [ "expression", "<--", "expression" ],
      [ "expression", "--<", "expression" ],
      [ "expression", ">--", "expression" ]
    ],
    "container-size-expression": [
      [ "len", "(", "expression", ")" ]
    ],
    "delete-field-expression": [
      [ "del", "expression" ]
    ],
    "map-keys-expression": [
      [ "keys", "(", "expression", ")" ]
    ],
    "container-field-expression": [
      [ "expression", "[", "expression", "]", -1 ]
    ],
    "assignment-expression": [
      [ "expression", "=", "expression" ]
    ],
    "binary-expression": [
      [ "expression", "+=", "expression" ],
      [ "expression", "-=", "expression" ],
      [ "expression", "*=", "expression" ],
      [ "expression", "/=", "expression" ],
      [ "expression", "%=", "expression" ],
      [ "expression", "&&", "expression" ],
      [ "expression", "||", "expression" ],
      [ "expression", "==", "expression" ],
      [ "expression", "!=", "expression" ],
      [ "expression", "<", "expression" ],
      [ "expression", ">", "expression" ],
      [ "expression", "<=", "expression" ],
      [ "expression", ">=", "expression" ],
      [ "expression", "+", "expression" ],
      [ "expression", "-", "expression" ],
      [ "expression", "*", "expression" ],
      [ "expression", "/", "expression" ],
      [ "expression", "%", "expression" ]
    ],
    "unary-expression": [
      [ "left-unary-expression" ],
      [ "right-unary-expression" ]
    ],
    "left-unary-expression": [
      [ "-", "expression" ],
      [ "~", "expression" ],
      [ "!", "expression" ]
    ],
    "right-unary-expression": [
      [ "expression", "!" ]
    ],
    "wrapped-expression": [
      [ "(", "expression", ")" ]
    ],
    "literal": [
      [ "null" ],
      [ "@string" ],
      [ "@number" ],
      [ "list-literal" ],
      [ "map-literal" ]
    ],
    "list-literal": [
      [ "[", "]" ],
      [ "[", "list-element-list", "]" ]
    ],
    "list-element-list": [
      [ "list-element-list", ",", "list-element-list" ],
      [ "expression" ]
    ],
    "map-literal": [
      [ "{", "}" ],
      [ "{", "map-pair-list", "}" ]
    ],
    "map-pair-list": [
      [ "map-pair-list", ",", "map-pair-list" ],
      [ "map-pair" ]
    ],
    "map-pair": [
      [ "expression", ":", "expression" ]
    ],
    "function-call": [
      [ "expression", "(", ")", -1 ],
      [ "expression", "(", "argument-list", ")", -1 ]
    ],
    "argument-list": [
      [ "argument-list", ",", "argument-list" ],
      [ "argument" ]
    ],
    "argument": [
      [ "expression" ]
    ],
    "capture-list": [
      [ "capture-list", ",", "capture-list" ],
      [ "@identifier" ]
    ],
    "pre-bump-expression": [
      [ "++", "expression" ],
      [ "--", "expression" ]
    ],
    "post-bump-expression": [
      [ "expression", "++" ],
      [ "expression", "--" ]
    ]
  }
}